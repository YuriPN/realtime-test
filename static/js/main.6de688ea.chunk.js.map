{"version":3,"sources":["utils/firebaseUtils.js","services/firebaseService.js","components/templates.jsx","components/tiny-editor.jsx","main/importFile.jsx","serviceWorker.js","index.js"],"names":["firebaseDatabase","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","database","FirebaseService","getOneData","_callee","path","id","query","snapshot","value","regenerator_default","a","wrap","_context","prev","next","ref","child","once","sent","val","abrupt","stop","getDocument","_callee2","document","_context2","updateDocument","_callee3","idDocument","collectionDocuments","documentRef","_context3","push","set","content","created","Date","toISOString","t0","insertHistory","_callee4","idHistory","differences","collectionHistories","historyRef","_context4","forEach","difference","Templates","title","description","TinyEditor","react_default","createElement","es2015","selector","this","props","init","external_plugins","wave","docId","username","plugins","contextmenu","toolbar","templates","onEditorChange","handleEditorChange","Component","UploadFile","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","convertToHtml","e","mammoth","arrayBuffer","target","result","optionsToMammoth","then","setState","file","asyncToGenerator","mark","state","handleFile","files","reader","FileReader","onload","readAsArrayBuffer","userName","Math","round","random","saveLoading","saveMessage","saveSuccess","undefined","styleMap","bind","assertThisInitialized","saveContent","console","log","className","type","onClick","htmlFor","aria-describedby","onChange","tiny_editor","Boolean","window","location","hostname","match","ReactDOM","render","importFile","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6de688ea.chunk.js","sourcesContent":["import firebase from 'firebase';\n\nvar config = {\n    apiKey: \"AIzaSyDWPNv8jnHuo17O8SblKeciZTqu0qKNzRk\",\n    authDomain: \"az-editor-online.firebaseapp.com\",\n    databaseURL: \"https://az-editor-online.firebaseio.com\",\n    projectId: \"az-editor-online\",\n    storageBucket: \"az-editor-online.appspot.com\",\n    messagingSenderId: \"372729218502\"\n};\n\nexport const firebaseImpl = firebase.initializeApp(config);\nexport const firebaseDatabase = firebase.database();","import {firebaseDatabase} from '../utils/firebaseUtils'\n\nexport default class FirebaseService {\n\n    static getOneData = async (path, id) => {\n        const query = firebaseDatabase.ref(path).child(id)\n        const snapshot = await query.once('value')\n        const value = snapshot.val()\n\n        return value\n    }\n\n    static getDocument = async (id) => {\n        \n        const pathOfCollectionDocuments = 'documents'\n        const document = await this.getOneData(pathOfCollectionDocuments, id)\n\n        return document\n    };\n\n    static updateDocument = async (idDocument, document) => {\n        var pathOfCollectionDocuments = 'documents_test'\n\n        try {\n            \n            var collectionDocuments = firebaseDatabase.ref(pathOfCollectionDocuments)\n            var documentRef = collectionDocuments.child(idDocument)\n            var newDocument = documentRef.push()\n            \n            newDocument.set({\n                content: document,\n                created: new Date().toISOString()\n            })\n        } catch (error) {\n            return false\n        }\n\n        return true\n    }\n\n    static insertHistory = async (idHistory, differences) => {\n        var pathOfCollectionHistories = 'histories'\n        try {\n\n            var collectionHistories = firebaseDatabase.ref().child(pathOfCollectionHistories)\n            var historyRef = collectionHistories.child(idHistory)\n\n            differences.forEach(difference => {\n                //console.log(difference)\n                let newHistory = historyRef.push()\n                newHistory.set(difference)\n            });\n\n        } catch (error) {\n            return false\n        }\n        return true\n    }\n\n}","export const Templates = [\n    {title: 'Contrato de Compra e Venda de Imóvel', description: 'Template de compra e venda', \n    content: '<p><b>Contrato de Fornecimento de Tecnologia</b><br>'+\n    '</p><p>Pelo presente instrumento particular, as partes, de um lado ........ .,'+\n    'pessoa jurídica de direito privado, com sede na Rua......., n.º ......, em ....../....,'+\n    'inscrita no CNPJ/MF sob n.º ......, por seu representante legal adiante assinado, '+\n    ' doravante denominada \"CONTRATANTE\", e de outro lado, .........,'+\n    ' pessoa jurídica de direito privado, com sede na Rua ......., n.º ....., em ...../......,'+\n    ' inscrita no CNPJ/MF sob n.º ......, por seu representante legal adiante assinado, '+\n    'doravante denominada \"CONTRATADA\".</p><p>Considerando o fato dos produtos de marca '+\n    'CONTRATADA terem qualidade reconhecida nacional e internacionalmente, '+\n    'cuja titularidade pertence à CONTRATADA, conforme contrato de licença de uso '+\n    'de marca averbado no INPI sob n.º ......, que a mesma está sempre utilizando de novas '+\n    'técnicas por ela inventadas e que pretende transmitir o \"know how\" à '+\n    'CONTRATANTE;</p><p>Considerando que a CONTRATANTE deseja obter assistência técnica da CONTRATADA, '+\n    'para fabricação de seus produtos, pelo presente e na melhor forma de direito, '+\n    'celebram o CONTRATO DE FORNECIMENTO DE TECNOLOGIA, que se regerá de acordo com as seguintes '+\n    'cláusulas e condições:<br><br><b>1. OBJETO</b><br><br>1.1. O objeto do presente contrato é o '+\n    'fornecimento pela CONTRATADA à CONTRATANTE, de todos os dados técnicos de engenharia do '+\n    'processo de fabricação de papelão ondulado com a marca CONTRATADA, inclusive metodologia do '+\n    'desenvolvimento tecnológico usado para a sua obtenção, dados esses representados '+\n    'pelo conjunto de informações técnicas, de documentos, de desenhos e instruções e de outros '+\n    'elementos análogos para permitir a fabricação.<br><br><b>2. PRAZO DE VIGÊNCIA</b></p><p>2.1. '+\n    'Prazo de vigência deste contrato será de ...... meses, iniciando a produção de seus '+\n    'efeitos em ....../...../......, podendo ser automaticamente renovado por iguais períodos, '+\n    'desde que nenhum dos contratantes apresente prévia notificação escrita desistindo da renovação, '+\n    'com antecedência mínima de 60 (sessenta) dias.<br><br>2.1.1. Se não houver renovação contratual, '+\n    'a outra parte não terá direito a nenhuma indenização por perdas edanos.<br><br><b>3. PREÇO</b><br><br>3.1. '+\n    'Pela transferência de tecnologia ora avençada, a CONTRATANTE pagará à CONTRATADA a '+\n    'quantia mensal de US$ .......... (extenso).<br><br><b>4. '+\n    'OBRIGAÇÕES DA CONTRATADA</b><br><br>4.1. Prestar à CONTRATANTE os seguintes serviços técnicos:'+\n    '<br><br>4.1.1.Fornecimento de projetos, desenhos e amostras de produtos de sua fabricação, '+\n    'cuja matéria prima será obrigatoriamente papel ou papelão reciclado;<br><br>4.1.2.Comentários, '+\n    'não só dos projetos, modelos e processos utilizados para fabricação dos produtos com a '+\n    'marca CONTRATANTE, apresentados pela mesma, como também das etiquetas, material de embalagem, '+\n    'publicidade e de promoção para aconselhamento e aprovação.<br><br>4.2. '+\n    'Informar à CONTRATANTE sobre todos os processos técnicos de fabricação elaborados pela '+\n    'CONTRATADA.<br><br>4.3.Enviar, às instalações da CONTRATANTE, por solicitação desta, '+\n    'técnicos para proporcionar assessoria ao pessoal da mesma, no que atina à fabricação e '+\n    'ao acabamento dos produtos. <br><br>Parágrafo Único. As despesas com transporte e '+\n    'diárias relacionadas com tais técnicos ficarão por conta da CONTRATANTE. Caso a '+\n    'CONTRATADA tenha arcado com algumas dessas despesas, deverá ser reembolsada '+\n    'pela CONTRATANTE dentro de 30 (trinta) dias, contados da data do recebimento da '+\n    'conta remetida pela CONTRATADA.<br><br>4.4.Fornecer à CONTRATANTE, durante a vigência do '+\n    'contrato, todas as inovações, melhoramentos ou aperfeiçoamentos introduzidos em linha '+\n    'de fabricação da CONTRATADA.<br><br><b>5. OBRIGAÇÕES DA CONTRATANTE</b><br><br>5.1. '+\n    'A CONTRATANTE comprometer-se-á, durante a vigência contratual, a apresentar '+\n    'aos técnicos da CONTRATADA, para sua aprovação, projetos ou amostras do produto, '+\n    'antes do início da fabricação, e se for um desses produtos criação da CONTRATANTE, '+\n    'a mesma deverá obter aprovação prévia e escrita da CONTRATADA.<br><br>5.2. '+\n    'A CONTRATANTE obrigar-se-á a manter sigilo quanto às informações reveladas pela CONTRATADA, '+\n    'não as transmitindo a terceiros, nem as usando em fabricação de produtos em outras marcas.<br><br><b>6. '+\n    'DISPOSIÇÕES GERAIS</b><br><br>6.1. A CONTRATADA poderá recomendar que a CONTRATANTE '+\n    'viaje a Unidade ............ da CONTRATADA, (2) duas vezes ao ano, para entrar em contato '+\n    'com os responsáveis pelos produtos com a marca CONTRATADA, a fim de tomar '+\n    'conhecimento das novas técnicas utilizadas na fabricação daqueles produtos.<br><br>6.2. '+\n    'Estará vedada a transferência deste contrato, bem como de qualquer direito ou obrigação dele '+\n    'decorrente.<br><br>6.3. Qualquer tolerância da CONTRATADA a infrações de cláusulas contratuais '+\n    'não deverá ser entendida por CONTRATANTE como novação do contrato.<br><br>6.4. '+\n    'A CONTRATADA garante que a tecnologia ora fornecida à CONTRATANTE será idêntica àquela '+\n    'por ela utilizada em sua linha de fabricação na data de entrada em vigor do presente '+\n    'contrato<br><br>6.4.1. Ficará a cargo da CONTRATANTE todo o trabalho, adaptação às normas e '+\n    'às condições de sua utilização. <br><br>6.5. A CONTRATADA garante à CONTRATANTE que toda a '+\n    'tecnologia transferida teve origem em experiências e pesquisas próprias, não constituindo '+\n    'nenhum plágio de direito de propriedade industrial.<br><br>6.6. A CONTRATADA garante à '+\n    'CONTRATANTE que não fará valer contra ela a qualquer tempo, quaisquer direitos de '+\n    'propriedade industrial, que possam estar relacionados ao conteúdo da tecnologia transferida, '+\n    'exceto quanto a futuras inovações ligadas a mesma tecnologia, regularmente protegidas '+\n    'no ............, com prioridade comprovada no país de domicílio da CONTRATADA.<br><br><b>7. '+\n    'RESCISÃO</b><br><br>7.1. Este contrato poderá ser rescindido, unilateralmente pela CONTRATADA, '+\n    'mediante prévia e expressa notificação se ocorrerem nas seguintes hipóteses:<br><br><b>a)</b> '+\n    'violação de causa contratual, desde que não sanada dentro do prazo de .......... (..........) '+\n    'dias, contados da notificação enviada a CONTRATANTE;<br><b>b)</b> inobservância do '+\n    'dever de sigilo pela CONTRATANTE;<br><b>c)</b> transferência, total ou parcial, '+\n    'deste contrato pela CONTRATANTE a terceiros; <br><b>d)</b> não-pagamento da remuneração '+\n    'já vencida até a data do vencimento da remuneração imediatamente subsequente.<br><b>e)'+\n    '</b> modificação da estrutura societária da CONTRATANTE e transferência de controle societário , '+\n    'ou ainda, alienação dos bens do ativo da CONTRATANTE sem prévia anuência escrita da CONTRATADA;'+\n    '<br><b>f)</b> concordata, falência ou liquidação da CONTRATANTE.<br><br>Parágrafo único. '+\n    'Se houver rescisão contratual por qualquer desses casos os pagamentos vencidos '+\n    'continuarão devidos, acrescidos de juros monetários e correção monetária. '+\n    '<br><br><b>8. JURISDIÇÃO</b><br><br>8.1.As partes do presente concordam que qualquer '+\n    'litígio com respeito aos termos e condições deste Contrato deverá ser levado ao Fórum da '+\n    'Comarca de ............, Estado do ............, ............, com expressa renúncia a '+\n    'qualquer outro, por mais privilegiado que seja ou venha a ser, aplicando-se em qualquer '+\n    'caso a Lei ............eira.<br><br>E, por assim estarem justas e contratadas, as partes do '+\n    'presente firmam o presente instrumento em quatro vias de igual teor e forma, na presença das '+\n    'testemunhas.<br><br>E, por estarem firmados<br><br>[Local], [dia] de [mês] de [ano].'+\n    '<br><br></p><p>Assinaturas:</p><br><br>'}\n  ]\n\n  ","import React, {Component} from 'react';\nimport {Editor} from '@tinymce/tinymce-react';\nimport {Templates} from '../components/templates';\n\nclass TinyEditor extends Component{\n\n    render(){\n        return(\n            <Editor \n                selector= 'textarea'\n                value={ this.props.content }\n                apiKey = '11mawuf4s296afp379jcddiaf0t6bb1buhxyipc2xwzfgeb5'\n                init={{\n                    external_plugins: {\"wave\": \"https://cdn2.codox.io/waveTinymce/plugin.min.js\"},\n                    wave: {\n                        \"docId\": \"doc1\", // unique document id,\n                        \"username\": \"User1\", // unique username or email address\n                        \"apiKey\": \"ee85b096-0af6-46b3-b3f5-4886d2e8a081\" // this is your actual API Key\n                    },\n                    plugins: [\n                        'code template autoresize print preview fullpage searchreplace autolink directionality visualblocks visualchars fullscreen image link media template codesample table charmap hr pagebreak nonbreaking anchor toc insertdatetime advlist lists wordcount imagetools textpattern visualblocks autosave'\n                    ],\n                    contextmenu: \"link image imagetools table spellchecker\",\n                    toolbar: 'code spellchecker formatselect | bold italic forecolor | alignleft aligncenter alignright alignjustify  | numlist bullist outdent indent  | removeformat | code | template | image | restoredraft',\n                    templates: Templates\n                }}\n                onEditorChange={ this.props.handleEditorChange }\n            />\n        )\n    }\n}\n\nexport default TinyEditor","import React, {Component} from 'react'\nimport mammoth from 'mammoth'\n\nimport FirebaseService from '../services/firebaseService'\nimport TinyEditor from '../components/tiny-editor'\n\nclass UploadFile extends Component{\n    \n    constructor(props){\n        super(props)\n        this.state = {\n            file: \"Teste\",\n            content: \"\",\n            docId: \"doc1\",\n            userName: 'User-' + Math.round((Math.random() * 100) + 1),\n            saveLoading: false,\n            saveMessage: '',\n            saveSuccess: undefined\n        }\n\n        this.optionsToMammoth = {\n            styleMap: [\n                \"p[style-name='Section Title'] => h1:fresh\",\n                \"p[style-name='Subsection Title'] => h2:fresh\"\n            ]\n        }\n\n        this.getDocument()\n\n        this.handleFile = this.handleFile.bind(this)\n        this.convertToHtml = this.convertToHtml.bind(this)\n        this.getDocument = this.getDocument.bind(this)\n        this.handleEditorChange = this.handleEditorChange.bind(this)\n        this.saveContent = this.saveContent.bind(this)\n    }\n\n    convertToHtml = (e) => {\n        mammoth.convertToHtml({arrayBuffer: e.target.result}, this.optionsToMammoth)\n                .then( (result) =>{\n                    this.setState({\n                        file: result.value\n                    })\n                })\n    }\n\n    getDocument = async () => {\n        var document = await FirebaseService.getDocument( this.state.docId )\n        var content = document.content\n        this.setState({\n            file: content\n        })\n    }\n    \n    handleFile = (e) =>{\n        var file = e.target.files[0]\n        var reader = new FileReader()\n\n        reader.onload = this.convertToHtml\n        \n        reader.readAsArrayBuffer(file)\n    }\n\n    handleEditorChange(content){\n        this.setState({ content: content })\n    }\n\n    saveContent(){\n        this.setState({ saveLoading: true })\n\n        let isSaved = FirebaseService.updateDocument( this.state.docId, this.state.content )\n        if (isSaved){\n            console.log('sucesso')\n        }\n        this.setState({ saveLoading: false })\n    }\n\n    render(){\n        \n        return(\n            <div id='divMain' className=\"container-fluid mt-2 justify-content-center row\">\n                <div className=\"col-md-12 text-right m-2\">\n                    <button type=\"button\" className=\"btn btn-outline-success\" onClick={ this.saveContent }>Salvar</button>\n                </div>\n                <div className=\"col-md-4\">\n                    <div className=\"input-group mb-3\">\n                        <div className=\"custom-file\">\n                            <label className=\"custom-file-label\" htmlFor=\"inputGroupFile02\" aria-describedby=\"inputGroupFileAddon02\">Choose file</label>\n                            <input type=\"file\" id=\"FileUpload\" className=\"custom-file-input\" onChange={ this.handleFile }/>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"col-md-10\">\n                    <TinyEditor \n                        content={ this.state.file } \n                        handleEditorChange= { this.handleEditorChange }\n                    />\n                </div>\n            </div>\n        )\n    }\n    \n}\n\nexport default UploadFile","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport FileUploader from './main/importFile'\nimport './index.css';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<FileUploader />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}